{"version":3,"sources":["assets/js/qrCodeScanner.js"],"names":["qrcode","window","video","document","createElement","canvasElement","getElementById","canvas","getContext","qrResult","outputData","btnScanQR","scanning","callback","res","innerText","srcObject","getTracks","forEach","track","stop","hidden","onclick","navigator","mediaDevices","getUserMedia","facingMode","then","stream","setAttribute","play","tick","scan","height","videoHeight","width","videoWidth","drawImage","requestAnimationFrame","decode","e","setTimeout"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,IAAME,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,IAAMC,aAAa,GAAGF,QAAQ,CAACG,cAAT,CAAwB,WAAxB,CAAtB;AACA,IAAMC,MAAM,GAAGF,aAAa,CAACG,UAAd,CAAyB,IAAzB,CAAf;AAEA,IAAMC,QAAQ,GAAGN,QAAQ,CAACG,cAAT,CAAwB,WAAxB,CAAjB;AACA,IAAMI,UAAU,GAAGP,QAAQ,CAACG,cAAT,CAAwB,YAAxB,CAAnB;AACA,IAAMK,SAAS,GAAGR,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAAlB;AAEA,IAAIM,QAAQ,GAAG,KAAf;;AAEAZ,MAAM,CAACa,QAAP,GAAkB,UAACC,GAAD,EAAS;AACzB,MAAIA,GAAJ,EAAS;AACPJ,IAAAA,UAAU,CAACK,SAAX,GAAuBD,GAAvB;AACAF,IAAAA,QAAQ,GAAG,KAAX;AAEAV,IAAAA,KAAK,CAACc,SAAN,CAAgBC,SAAhB,GAA4BC,OAA5B,CAAoC,UAACC,KAAD,EAAW;AAC7CA,MAAAA,KAAK,CAACC,IAAN;AACD,KAFD;AAIAX,IAAAA,QAAQ,CAACY,MAAT,GAAkB,KAAlB;AACAhB,IAAAA,aAAa,CAACgB,MAAd,GAAuB,IAAvB;AACAV,IAAAA,SAAS,CAACU,MAAV,GAAmB,KAAnB;AACD;AACF,CAbD;;AAeAV,SAAS,CAACW,OAAV,GAAoB,YAAM;AACxBC,EAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEvB,IAAAA,KAAK,EAAE;AAAEwB,MAAAA,UAAU,EAAE;AAAd;AAAT,GADhB,EAEGC,IAFH,CAEQ,UAAUC,MAAV,EAAkB;AACtBhB,IAAAA,QAAQ,GAAG,IAAX;AACAH,IAAAA,QAAQ,CAACY,MAAT,GAAkB,IAAlB;AACAV,IAAAA,SAAS,CAACU,MAAV,GAAmB,IAAnB;AACAhB,IAAAA,aAAa,CAACgB,MAAd,GAAuB,KAAvB;AACAnB,IAAAA,KAAK,CAAC2B,YAAN,CAAmB,aAAnB,EAAkC,IAAlC,EALsB,CAKmB;;AACzC3B,IAAAA,KAAK,CAACc,SAAN,GAAkBY,MAAlB;AACA1B,IAAAA,KAAK,CAAC4B,IAAN;AACAC,IAAAA,IAAI;AACJC,IAAAA,IAAI;AACL,GAZH;AAaD,CAdD;;AAgBA,SAASD,IAAT,GAAgB;AACd1B,EAAAA,aAAa,CAAC4B,MAAd,GAAuB/B,KAAK,CAACgC,WAA7B;AACA7B,EAAAA,aAAa,CAAC8B,KAAd,GAAsBjC,KAAK,CAACkC,UAA5B;AACA7B,EAAAA,MAAM,CAAC8B,SAAP,CAAiBnC,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BG,aAAa,CAAC8B,KAA5C,EAAmD9B,aAAa,CAAC4B,MAAjE;AAEArB,EAAAA,QAAQ,IAAI0B,qBAAqB,CAACP,IAAD,CAAjC;AACD;;AAED,SAASC,IAAT,GAAgB;AACd,MAAI;AACFhC,IAAAA,MAAM,CAACuC,MAAP;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,UAAU,CAACT,IAAD,EAAO,GAAP,CAAV;AACD;AACF","file":"qrCodeScanner.4c43dcaf.js","sourceRoot":"..","sourcesContent":["const qrcode = window.qrcode;\r\n\r\nconst video = document.createElement(\"video\");\r\nconst canvasElement = document.getElementById(\"qr-canvas\");\r\nconst canvas = canvasElement.getContext(\"2d\");\r\n\r\nconst qrResult = document.getElementById(\"qr-result\");\r\nconst outputData = document.getElementById(\"outputData\");\r\nconst btnScanQR = document.getElementById(\"btn-scan-qr\");\r\n\r\nlet scanning = false;\r\n\r\nqrcode.callback = (res) => {\r\n  if (res) {\r\n    outputData.innerText = res;\r\n    scanning = false;\r\n\r\n    video.srcObject.getTracks().forEach((track) => {\r\n      track.stop();\r\n    });\r\n\r\n    qrResult.hidden = false;\r\n    canvasElement.hidden = true;\r\n    btnScanQR.hidden = false;\r\n  }\r\n};\r\n\r\nbtnScanQR.onclick = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia({ video: { facingMode: \"environment\" } })\r\n    .then(function (stream) {\r\n      scanning = true;\r\n      qrResult.hidden = true;\r\n      btnScanQR.hidden = true;\r\n      canvasElement.hidden = false;\r\n      video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n      video.srcObject = stream;\r\n      video.play();\r\n      tick();\r\n      scan();\r\n    });\r\n};\r\n\r\nfunction tick() {\r\n  canvasElement.height = video.videoHeight;\r\n  canvasElement.width = video.videoWidth;\r\n  canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);\r\n\r\n  scanning && requestAnimationFrame(tick);\r\n}\r\n\r\nfunction scan() {\r\n  try {\r\n    qrcode.decode();\r\n  } catch (e) {\r\n    setTimeout(scan, 300);\r\n  }\r\n}\r\n"]}